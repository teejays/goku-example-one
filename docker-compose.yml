services:

  frontend:
    image: node:latest
    depends_on:
      - backend
    ports:
      - 3000:3000
    networks:
      - common-network
    volumes:
      - "${PWD}:/app"
    command: ["yarn", "--cwd", "/app/frontend/admin", "start"]

  backend:
    # image: golang:latest
    build:
      context: ./backend
      dockerfile: dockerfile
    depends_on:
      - database
    ports:
      - 8080:8080
      - 8081:8081
    networks:
      - common-network
    volumes:
      - "${PWD}:/app"
      - "${$SSH_AUTH_SOCK}:/root/"
    #working_dir: /app/backend
    environment:
      - SSH_AUTH_SOCKET=${SSH_AUTH_SOCK}
    #command: ["go", "run", "main.go"]
  
  database:
    image: postgres:alpine3.15
    ports:
      - 5432:5432
    networks:
      - common-network
    volumes:
      - "${PWD}:/app"
    environment:
      - POSTGRES_PASSWORD=postgres
    command: ["postgres"]

networks:
  common-network:

volumes:
  ssh-agent:
    external: true

    


